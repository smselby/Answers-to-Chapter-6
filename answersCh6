1.	What are escape characters? 
Answer:  characters in string values that are difﬁcult or impossible to type into code.

2.	What do the \n and \t escape characters represent? 
Answer: \n is a newline; \t is a tab

3.	How can you put a \ backslash character in a string?
Answer: \\ escape character will represent a backslash character

4.	The string value "Howl's Moving Castle" is a valid string. Why isn’t it a problem that the single quote character in the word Howl's isn’t escaped? Answer: because double quotes were used to mark the beginning and end of the string
 
5.	If you don’t want to put \n in your string, how can you write a string with newlines in it? 
Answer: multi-line strings allow you to use newlines in strings w/out the \n escape character.

6.	What do the following expressions evaluate to? s 'Hello world!'[1] s 'Hello world!'[0:5] s 'Hello world!'[:5] s 'Hello world!'[3:] 
Answer: 'e'  /  'Hello'  /  'Hello'  /  'lo world!

7.	What do the following expressions evaluate to? s 'Hello'.upper() s 'Hello'.upper().isupper() s 'Hello'.upper().lower() 
Answer: 'HELLO'  / True  /  'hello'

8.	What do the following expressions evaluate to? s 'Remember, remember, the fifth of November.'.split() s '-'.join('There can be only one.'.split())
Answer: ['Remember,', 'remember,', 'the', 'fifth', 'of', 'November.']
&  'There-can-be-only-one.'

9.	What string methods can you use to right-justify, left-justify, and center a string?
Answer: rjust(), ljust(), and center() string methods
 
10.	How can you trim whitespace characters from the beginning or end of a string?
Answer: lstrip() and rstrip() method removes whitespace from the left and right ends of a string

